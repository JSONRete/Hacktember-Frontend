"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var SignInWithMetamaskButton_exports = {};
__export(SignInWithMetamaskButton_exports, {
  SignInWithMetamaskButton: () => SignInWithMetamaskButton
});
module.exports = __toCommonJS(SignInWithMetamaskButton_exports);
var import_react = __toESM(require("react"));
var import_utils = require("../utils");
var import_withClerk = require("./withClerk");
const SignInWithMetamaskButton = (0, import_withClerk.withClerk)(
  ({ clerk, children, ...props }) => {
    const { redirectUrl, ...rest } = props;
    children = (0, import_utils.normalizeWithDefaultValue)(children, "Sign in with Metamask");
    const child = (0, import_utils.assertSingleChild)(children)("SignInWithMetamaskButton");
    const clickHandler = async () => {
      async function authenticate() {
        await clerk.authenticateWithMetamask({ redirectUrl });
      }
      void authenticate();
    };
    const wrappedChildClickHandler = async (e) => {
      await (0, import_utils.safeExecute)(child.props.onClick)(e);
      return clickHandler();
    };
    const childProps = { ...rest, onClick: wrappedChildClickHandler };
    return import_react.default.cloneElement(child, childProps);
  },
  "SignInWithMetamask"
);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SignInWithMetamaskButton
});
//# sourceMappingURL=SignInWithMetamaskButton.js.map