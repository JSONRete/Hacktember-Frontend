{"version":3,"sources":["../../../../src/components/__tests__/SignUpButton.test.tsx"],"sourcesContent":["import { render, screen, userEvent, waitFor } from '@clerk/shared/testUtils';\nimport React from 'react';\n\nimport { SignUpButton } from '../SignUpButton';\n\nconst mockRedirectToSignUp = jest.fn();\nconst originalError = console.error;\n\nconst mockClerk = {\n  redirectToSignUp: mockRedirectToSignUp,\n} as any;\n\njest.mock('../withClerk', () => {\n  return {\n    withClerk: (Component: any) => (props: any) => {\n      return (\n        <Component\n          {...props}\n          clerk={mockClerk}\n        />\n      );\n    },\n  };\n});\n\nconst url = 'https://www.clerk.com';\n\ndescribe('<SignUpButton/>', () => {\n  beforeAll(() => {\n    console.error = jest.fn();\n  });\n\n  afterAll(() => {\n    console.error = originalError;\n  });\n\n  beforeEach(() => {\n    mockRedirectToSignUp.mockReset();\n  });\n\n  it('calls clerk.redirectToSignUp when clicked', async () => {\n    render(<SignUpButton />);\n    const btn = screen.getByText('Sign up');\n    userEvent.click(btn);\n    await waitFor(() => {\n      expect(mockRedirectToSignUp).toHaveBeenCalled();\n    });\n  });\n\n  it('handles redirectUrl prop', async () => {\n    render(<SignUpButton redirectUrl={url} />);\n    const btn = screen.getByText('Sign up');\n    userEvent.click(btn);\n    await waitFor(() => {\n      expect(mockRedirectToSignUp).toHaveBeenCalledWith({ redirectUrl: url });\n    });\n  });\n\n  it('handles afterSignUpUrl prop', async () => {\n    render(<SignUpButton afterSignUpUrl={url} />);\n    const btn = screen.getByText('Sign up');\n    userEvent.click(btn);\n    await waitFor(() => {\n      expect(mockRedirectToSignUp).toHaveBeenCalledWith({\n        afterSignUpUrl: url,\n      });\n    });\n  });\n\n  it('handles afterSignUpUrl prop', async () => {\n    render(<SignUpButton afterSignUpUrl={url} />);\n    const btn = screen.getByText('Sign up');\n    userEvent.click(btn);\n    await waitFor(() => {\n      expect(mockRedirectToSignUp).toHaveBeenCalledWith({\n        afterSignUpUrl: url,\n      });\n    });\n  });\n\n  it('renders passed button and calls both click handlers', async () => {\n    const handler = jest.fn();\n    render(\n      <SignUpButton>\n        <button onClick={handler}>custom button</button>\n      </SignUpButton>,\n    );\n    const btn = screen.getByText('custom button');\n    userEvent.click(btn);\n    await waitFor(() => {\n      expect(handler).toHaveBeenCalled();\n      expect(mockRedirectToSignUp).toHaveBeenCalled();\n    });\n  });\n\n  it('uses text passed as children', async () => {\n    render(<SignUpButton>text</SignUpButton>);\n    screen.getByText('text');\n  });\n\n  it('throws if multiple children provided', async () => {\n    expect(() => {\n      render(\n        <SignUpButton>\n          <button>1</button>\n          <button>2</button>\n        </SignUpButton>,\n      );\n    }).toThrow();\n  });\n});\n"],"mappings":"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","names":["React"]}