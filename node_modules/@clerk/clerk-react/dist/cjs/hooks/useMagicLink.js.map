{"version":3,"sources":["../../../src/hooks/useMagicLink.ts"],"sourcesContent":["import type {\n  CreateMagicLinkFlowReturn,\n  EmailAddressResource,\n  SignInResource,\n  SignInStartMagicLinkFlowParams,\n  SignUpResource,\n  StartMagicLinkFlowParams,\n} from '@clerk/types';\nimport React from 'react';\n\ntype MagicLinkable = SignUpResource | EmailAddressResource | SignInResource;\ntype UseMagicLinkSignInReturn = CreateMagicLinkFlowReturn<SignInStartMagicLinkFlowParams, SignInResource>;\ntype UseMagicLinkSignUpReturn = CreateMagicLinkFlowReturn<StartMagicLinkFlowParams, SignUpResource>;\ntype UseMagicLinkEmailAddressReturn = CreateMagicLinkFlowReturn<StartMagicLinkFlowParams, EmailAddressResource>;\n\nfunction useMagicLink(resource: SignInResource): UseMagicLinkSignInReturn;\nfunction useMagicLink(resource: SignUpResource): UseMagicLinkSignUpReturn;\nfunction useMagicLink(resource: EmailAddressResource): UseMagicLinkEmailAddressReturn;\nfunction useMagicLink(\n  resource: MagicLinkable,\n): UseMagicLinkSignInReturn | UseMagicLinkSignUpReturn | UseMagicLinkEmailAddressReturn {\n  const { startMagicLinkFlow, cancelMagicLinkFlow } = React.useMemo(() => resource.createMagicLinkFlow(), [resource]);\n\n  React.useEffect(() => {\n    return cancelMagicLinkFlow;\n  }, []);\n\n  return {\n    startMagicLinkFlow,\n    cancelMagicLinkFlow,\n  } as UseMagicLinkSignInReturn | UseMagicLinkSignUpReturn | UseMagicLinkEmailAddressReturn;\n}\n\nexport { useMagicLink };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,mBAAkB;AAUlB,SAAS,aACP,UACsF;AACtF,QAAM,EAAE,oBAAoB,oBAAoB,IAAI,aAAAA,QAAM,QAAQ,MAAM,SAAS,oBAAoB,GAAG,CAAC,QAAQ,CAAC;AAElH,eAAAA,QAAM,UAAU,MAAM;AACpB,WAAO;AAAA,EACT,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;","names":["React"]}