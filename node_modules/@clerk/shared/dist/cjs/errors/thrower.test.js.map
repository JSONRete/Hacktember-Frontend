{"version":3,"sources":["../../../src/errors/thrower.test.ts"],"sourcesContent":["import type { ErrorThrowerOptions } from './thrower';\nimport { buildErrorThrower } from './thrower';\n\ndescribe('ErrorThrower', () => {\n  const errorThrower = buildErrorThrower({ packageName: '@clerk/test-package' });\n\n  it('throws the correct error message and interpolates pkg and known parameters', () => {\n    expect(() => errorThrower.throwInvalidPublishableKeyError({ key: 'whatever' })).toThrow(\n      '@clerk/test-package: The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key=whatever)',\n    );\n  });\n\n  it('throws the correct error message and interpolates pkg if no parameters are provided', () => {\n    expect(() => errorThrower.throwMissingPublishableKeyError()).toThrow(\n      '@clerk/test-package: Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.',\n    );\n  });\n\n  it('throws a custom error message and interpolates pkg and known parameters', () => {\n    expect(() =>\n      errorThrower\n        .setPackageName({\n          packageName: '@clerk/another-test-package',\n        })\n        .setMessages({\n          customMessages: {\n            InvalidPublishableKeyErrorMessage:\n              'This is a custom error message for key={{key}} and an unknown {{replacement}}',\n          },\n        } as ErrorThrowerOptions)\n        .throwInvalidPublishableKeyError({ key: 'whatever' }),\n    ).toThrow('@clerk/another-test-package: This is a custom error message for key=whatever and an unknown ');\n  });\n});\n"],"mappings":";AACA,qBAAkC;AAElC,SAAS,gBAAgB,MAAM;AAC7B,QAAM,mBAAe,kCAAkB,EAAE,aAAa,sBAAsB,CAAC;AAE7E,KAAG,8EAA8E,MAAM;AACrF,WAAO,MAAM,aAAa,gCAAgC,EAAE,KAAK,WAAW,CAAC,CAAC,EAAE;AAAA,MAC9E;AAAA,IACF;AAAA,EACF,CAAC;AAED,KAAG,uFAAuF,MAAM;AAC9F,WAAO,MAAM,aAAa,gCAAgC,CAAC,EAAE;AAAA,MAC3D;AAAA,IACF;AAAA,EACF,CAAC;AAED,KAAG,2EAA2E,MAAM;AAClF;AAAA,MAAO,MACL,aACG,eAAe;AAAA,QACd,aAAa;AAAA,MACf,CAAC,EACA,YAAY;AAAA,QACX,gBAAgB;AAAA,UACd,mCACE;AAAA,QACJ;AAAA,MACF,CAAwB,EACvB,gCAAgC,EAAE,KAAK,WAAW,CAAC;AAAA,IACxD,EAAE,QAAQ,8FAA8F;AAAA,EAC1G,CAAC;AACH,CAAC;","names":[]}