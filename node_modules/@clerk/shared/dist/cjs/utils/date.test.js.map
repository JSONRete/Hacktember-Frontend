{"version":3,"sources":["../../../src/utils/date.test.ts"],"sourcesContent":["import type { RelativeDateCase } from './date';\nimport { addYears, dateTo12HourTime, differenceInCalendarDays, formatRelative } from './date';\n\ndescribe('date utils', () => {\n  describe('dateTo12HourTime(date)', () => {\n    const cases: Array<[Date | undefined, string]> = [\n      [undefined, ''],\n      [new Date('1/1/2020 23:15'), '11:15 PM'],\n      [new Date('1/1/2020 11:15'), '11:15 AM'],\n      [new Date('1/1/2020 01:59'), '01:59 AM'],\n      [new Date('1/1/2020 13:59'), '01:59 PM'],\n      [new Date('1/1/2020 00:59'), '12:59 AM'],\n    ];\n\n    it.each(cases)('.dateTo12HourTime(%s) => %s', (a, expected) => {\n      expect(dateTo12HourTime(a as any)).toBe(expected);\n    });\n  });\n\n  describe('differenceInCalendarDays(date1, date2)', () => {\n    const cases: Array<[Date | undefined, Date, { absolute: boolean }, number]> = [\n      [undefined, new Date(), { absolute: true }, 0],\n      [new Date('1/1/2020'), new Date('1/2/2020'), { absolute: true }, 1],\n      [new Date('1/1/2020'), new Date('1/3/2020'), { absolute: true }, 2],\n      [new Date('1/30/2020'), new Date('1/31/2020'), { absolute: true }, 1],\n      [new Date('1/30/2020'), new Date('2/1/2020'), { absolute: true }, 2],\n      [new Date('1/1/2020'), new Date('2/1/2020'), { absolute: true }, 31],\n      [new Date('1/1/2020'), new Date('1/2/2020'), { absolute: false }, 1],\n      [new Date('1/1/2020'), new Date('1/5/2020'), { absolute: false }, 4],\n      [new Date('1/5/2020'), new Date('1/1/2020'), { absolute: true }, 4],\n      [new Date('1/5/2020'), new Date('1/1/2020'), { absolute: false }, -4],\n    ];\n\n    it.each(cases)('.differenceInCalendarDays(%s,%s) => %s', (a, b, c, expected) => {\n      expect(differenceInCalendarDays(a as Date, b, c)).toBe(expected);\n    });\n  });\n\n  describe('formatRelative(date)', () => {\n    const cases: Array<[Date | undefined, Date | undefined, RelativeDateCase | null]> = [\n      [undefined, undefined, null],\n      [new Date('1/1/2020 23:15'), new Date('1/1/2020'), 'sameDay'],\n      [new Date('1/5/2020 23:15'), new Date('1/6/2020'), 'lastDay'],\n      [new Date('1/3/2020 23:15'), new Date('1/6/2020'), 'previous6Days'],\n      [new Date('1/7/2020 23:15'), new Date('1/6/2020'), 'nextDay'],\n      [new Date('1/10/2020 23:15'), new Date('1/6/2020'), 'next6Days'],\n      [new Date('12/10/2020 23:15'), new Date('1/6/2020'), 'other'],\n      [new Date('12/10/2020 23:15'), new Date('1/6/2021'), 'other'],\n    ];\n\n    it.each(cases)('.formatRelative(%s, %s) => %s', (a, b, expected) => {\n      expect(formatRelative({ date: a as Date, relativeTo: b as Date })?.relativeDateCase || null).toBe(expected);\n    });\n  });\n\n  describe('addYears(date, number)', () => {\n    const cases: Array<[Date, number, Date]> = [\n      [new Date('1/1/2020 23:15'), 1, new Date('1/1/2021 23:15')],\n      [new Date('1/1/2019 23:15'), 1, new Date('1/1/2020 23:15')],\n      [new Date('1/1/2021 23:15'), 100, new Date('1/1/2121 23:15')],\n      [new Date('1/1/2021 23:15'), 0, new Date('1/1/2021 23:15')],\n    ];\n\n    it.each(cases)('.addYears(%s, %s) => %s', (a, b, expected) => {\n      expect(addYears(a, b)).toStrictEqual(expected);\n    });\n  });\n});\n"],"mappings":"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","names":[]}