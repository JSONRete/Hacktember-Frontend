{"version":3,"sources":["../../../src/utils/proxy.test.ts"],"sourcesContent":["import { isHttpOrHttps, isProxyUrlRelative, isValidProxyUrl, proxyUrlToAbsoluteURL } from './proxy';\n\ndescribe('isValidProxyUrl(key)', () => {\n  it('returns true if the proxyUrl is valid', () => {\n    expect(isValidProxyUrl('https://proxy-app.dev/api/__clerk')).toBe(true);\n  });\n\n  it('returns true if the proxyUrl is valid', () => {\n    expect(isValidProxyUrl('/api/__clerk')).toBe(true);\n  });\n\n  it('returns false if the proxyUrl is invalid', () => {\n    expect(isValidProxyUrl('proxy-app.dev/api/__clerk')).toBe(false);\n  });\n});\n\ndescribe('isProxyUrlRelative(key)', () => {\n  it('returns true if the proxyUrl starts with `/`', () => {\n    expect(isProxyUrlRelative('/api/__clerk')).toBe(true);\n  });\n\n  it('returns false if the proxyUrl does not starts with `/`', () => {\n    expect(isProxyUrlRelative('proxy-app.dev/api/__clerk==')).toBe(false);\n  });\n});\n\ndescribe('isHttpOrHttps(key)', () => {\n  it.each([\n    ['http://clerk.com/api/__clerk', true],\n    ['http://clerk.com/api/__clerk', true],\n    [undefined, false],\n    ['/api/__clerk', false],\n    ['', false],\n  ])('.isHttpOrHttps(%s)', (key, expected) => {\n    expect(isHttpOrHttps(key)).toBe(expected);\n  });\n});\n\ndescribe('proxyUrlToAbsoluteURL(url)', () => {\n  const currentLocation = global.window.location;\n\n  beforeEach(() => {\n    Object.defineProperty(global.window, 'location', {\n      get() {\n        return {\n          origin: 'https://clerk.com',\n        };\n      },\n      configurable: true,\n    });\n  });\n\n  afterEach(() => {\n    Object.defineProperty(global.window, 'location', {\n      value: currentLocation,\n      writable: true,\n    });\n  });\n\n  it('returns an absolute URL made from window.location.origin and the partial a path', () => {\n    expect(proxyUrlToAbsoluteURL('/api/__clerk')).toBe('https://clerk.com/api/__clerk');\n  });\n\n  it('returns the same value as the parameter given as it already an absolute URL', () => {\n    expect(proxyUrlToAbsoluteURL('https://clerk.com/api/__clerk')).toBe('https://clerk.com/api/__clerk');\n  });\n  it('returns empty string if parameter is undefined', () => {\n    expect(proxyUrlToAbsoluteURL(undefined)).toBe('');\n  });\n});\n"],"mappings":";AAAA,mBAA0F;AAE1F,SAAS,wBAAwB,MAAM;AACrC,KAAG,yCAAyC,MAAM;AAChD,eAAO,8BAAgB,mCAAmC,CAAC,EAAE,KAAK,IAAI;AAAA,EACxE,CAAC;AAED,KAAG,yCAAyC,MAAM;AAChD,eAAO,8BAAgB,cAAc,CAAC,EAAE,KAAK,IAAI;AAAA,EACnD,CAAC;AAED,KAAG,4CAA4C,MAAM;AACnD,eAAO,8BAAgB,2BAA2B,CAAC,EAAE,KAAK,KAAK;AAAA,EACjE,CAAC;AACH,CAAC;AAED,SAAS,2BAA2B,MAAM;AACxC,KAAG,gDAAgD,MAAM;AACvD,eAAO,iCAAmB,cAAc,CAAC,EAAE,KAAK,IAAI;AAAA,EACtD,CAAC;AAED,KAAG,0DAA0D,MAAM;AACjE,eAAO,iCAAmB,6BAA6B,CAAC,EAAE,KAAK,KAAK;AAAA,EACtE,CAAC;AACH,CAAC;AAED,SAAS,sBAAsB,MAAM;AACnC,KAAG,KAAK;AAAA,IACN,CAAC,gCAAgC,IAAI;AAAA,IACrC,CAAC,gCAAgC,IAAI;AAAA,IACrC,CAAC,QAAW,KAAK;AAAA,IACjB,CAAC,gBAAgB,KAAK;AAAA,IACtB,CAAC,IAAI,KAAK;AAAA,EACZ,CAAC,EAAE,sBAAsB,CAAC,KAAK,aAAa;AAC1C,eAAO,4BAAc,GAAG,CAAC,EAAE,KAAK,QAAQ;AAAA,EAC1C,CAAC;AACH,CAAC;AAED,SAAS,8BAA8B,MAAM;AAC3C,QAAM,kBAAkB,OAAO,OAAO;AAEtC,aAAW,MAAM;AACf,WAAO,eAAe,OAAO,QAAQ,YAAY;AAAA,MAC/C,MAAM;AACJ,eAAO;AAAA,UACL,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,MACA,cAAc;AAAA,IAChB,CAAC;AAAA,EACH,CAAC;AAED,YAAU,MAAM;AACd,WAAO,eAAe,OAAO,QAAQ,YAAY;AAAA,MAC/C,OAAO;AAAA,MACP,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,CAAC;AAED,KAAG,mFAAmF,MAAM;AAC1F,eAAO,oCAAsB,cAAc,CAAC,EAAE,KAAK,+BAA+B;AAAA,EACpF,CAAC;AAED,KAAG,+EAA+E,MAAM;AACtF,eAAO,oCAAsB,+BAA+B,CAAC,EAAE,KAAK,+BAA+B;AAAA,EACrG,CAAC;AACD,KAAG,kDAAkD,MAAM;AACzD,eAAO,oCAAsB,MAAS,CAAC,EAAE,KAAK,EAAE;AAAA,EAClD,CAAC;AACH,CAAC;","names":[]}