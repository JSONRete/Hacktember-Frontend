{"version":3,"sources":["../../../src/utils/array.test.ts"],"sourcesContent":["import { toSentence } from './array';\n\ndescribe('toSentence', () => {\n  it('returns a single item as-is', () => {\n    expect(toSentence(['xyz'])).toBe('xyz');\n    expect(toSentence(['abc'])).toBe('abc');\n  });\n\n  it('joins multiple items but the last with a comma and the last with \", or\"', () => {\n    expect(toSentence(['abc', 'def'])).toBe('abc, or def');\n    expect(toSentence(['qwe', 'zxc', 'asd'])).toBe('qwe, zxc, or asd');\n  });\n\n  it('returns empty string if passed an empty array', () => {\n    expect(toSentence([])).toBe('');\n  });\n});\n"],"mappings":"AAAA,SAAS,kBAAkB;AAE3B,SAAS,cAAc,MAAM;AAC3B,KAAG,+BAA+B,MAAM;AACtC,WAAO,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK;AACtC,WAAO,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,KAAK;AAAA,EACxC,CAAC;AAED,KAAG,2EAA2E,MAAM;AAClF,WAAO,WAAW,CAAC,OAAO,KAAK,CAAC,CAAC,EAAE,KAAK,aAAa;AACrD,WAAO,WAAW,CAAC,OAAO,OAAO,KAAK,CAAC,CAAC,EAAE,KAAK,kBAAkB;AAAA,EACnE,CAAC;AAED,KAAG,iDAAiD,MAAM;AACxD,WAAO,WAAW,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE;AAAA,EAChC,CAAC;AACH,CAAC;","names":[]}