{"version":3,"sources":["../../../src/utils/browser.test.ts"],"sourcesContent":["import { inBrowser, isValidBrowserOnline, userAgentIsRobot } from './browser';\n\ndescribe('inBrowser()', () => {\n  it('returns true if window is defined', () => {\n    expect(inBrowser()).toBe(true);\n  });\n});\n\ndescribe('detectUserAgentRobot', () => {\n  const botAgents = [\n    'Mozilla/5.0 (iPhone; CPU iPhone OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5376e Safari/8536.25 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)',\n    'DoCoMo/2.0 N905i(c100;TB;W24H16) (compatible; Googlebot-Mobile/2.1; +http://www.google.com/bot.html)',\n    'Mozilla/5.0 (compatible; adidxbot/2.0;  http://www.bing.com/bingbot.htm)',\n    'LinkedInBot/1.0 (compatible; Mozilla/5.0; Jakarta Commons-HttpClient/3.1 +http://www.linkedin.com)',\n    'msnbot-NewsBlogs/2.0b (+http://search.msn.com/msnbot.htm)',\n    'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36 (compatible; YandexScreenshotBot/3.0; +http://yandex.com/bots)',\n    'Mozilla/5.0 (compatible; spbot/1.0; +http://www.seoprofiler.com/bot/ )',\n  ];\n\n  it.each(botAgents)('returns true if User Agent name includes keyword that suggests automation/bot', agent => {\n    expect(userAgentIsRobot(agent)).toBe(true);\n  });\n\n  const realAgents = [\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15',\n  ];\n\n  it.each(realAgents)(\n    'returns false if User Agent name does not include keyword that suggests automation/bot',\n    agent => {\n      expect(userAgentIsRobot(agent)).toBe(false);\n    },\n  );\n});\n\ndescribe('isValidBrowserOnline', () => {\n  let userAgentGetter: any;\n  let webdriverGetter: any;\n  let onLineGetter: any;\n  let connectionGetter: any;\n\n  beforeEach(() => {\n    userAgentGetter = jest.spyOn(window.navigator, 'userAgent', 'get');\n    webdriverGetter = jest.spyOn(window.navigator, 'webdriver', 'get');\n    onLineGetter = jest.spyOn(window.navigator, 'onLine', 'get');\n    // @ts-ignore\n    connectionGetter = jest.spyOn(window.navigator, 'connection', 'get');\n  });\n\n  it('returns TRUE if connection is online, navigator is online, has disabled webdriver, and not a bot', () => {\n    userAgentGetter.mockReturnValue(\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    );\n    webdriverGetter.mockReturnValue(false);\n    onLineGetter.mockReturnValue(true);\n    connectionGetter.mockReturnValue({ downlink: 10, rtt: 100 });\n\n    expect(isValidBrowserOnline()).toBe(true);\n  });\n\n  it('returns FALSE if connection is online, navigator is online, has disabled webdriver, and is a bot', () => {\n    userAgentGetter.mockReturnValue('msnbot-NewsBlogs/2.0b (+http://search.msn.com/msnbot.htm)');\n    webdriverGetter.mockReturnValue(false);\n    onLineGetter.mockReturnValue(true);\n    connectionGetter.mockReturnValue({ downlink: 10, rtt: 100 });\n\n    expect(isValidBrowserOnline()).toBe(false);\n  });\n\n  it('returns FALSE if connection is online, navigator is online, has ENABLED the webdriver flag, and is not a bot', () => {\n    userAgentGetter.mockReturnValue(\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    );\n    webdriverGetter.mockReturnValue(true);\n    onLineGetter.mockReturnValue(true);\n    connectionGetter.mockReturnValue({ downlink: 10, rtt: 100 });\n\n    expect(isValidBrowserOnline()).toBe(false);\n  });\n\n  it('returns FALSE if connection is NOT online, navigator is online, has disabled the webdriver flag, and is not a bot', () => {\n    userAgentGetter.mockReturnValue(\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    );\n    webdriverGetter.mockReturnValue(false);\n    onLineGetter.mockReturnValue(true);\n    connectionGetter.mockReturnValue({ downlink: 0, rtt: 0 });\n\n    expect(isValidBrowserOnline()).toBe(false);\n  });\n\n  it('returns FALSE if connection is online, navigator is NOT online, has disabled the webdriver flag, and is not a bot', () => {\n    userAgentGetter.mockReturnValue(\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    );\n    webdriverGetter.mockReturnValue(false);\n    onLineGetter.mockReturnValue(false);\n    connectionGetter.mockReturnValue({ downlink: 10, rtt: 100 });\n\n    expect(isValidBrowserOnline()).toBe(false);\n  });\n\n  it('fallbacks to TRUE if the experimental connection property is not defined', () => {\n    userAgentGetter.mockReturnValue(\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/109.0',\n    );\n    webdriverGetter.mockReturnValue(false);\n    onLineGetter.mockReturnValue(true);\n    connectionGetter.mockReturnValue(undefined);\n\n    expect(isValidBrowserOnline()).toBe(true);\n  });\n});\n"],"mappings":"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","names":[]}