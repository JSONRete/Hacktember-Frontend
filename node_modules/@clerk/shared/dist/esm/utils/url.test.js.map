{"version":3,"sources":["../../../src/utils/url.test.ts"],"sourcesContent":["import { addClerkPrefix, parseSearchParams, stripScheme } from './url';\n\ndescribe('parseSearchParams(queryString)', () => {\n  it('parses query string and returns a URLSearchParams object', () => {\n    let searchParams = parseSearchParams('');\n    expect(searchParams.get('foo')).toBeNull();\n\n    searchParams = parseSearchParams('foo=42&bar=43');\n    expect(searchParams.get('foo')).toBe('42');\n    expect(searchParams.get('bar')).toBe('43');\n\n    searchParams = parseSearchParams('?foo=42&bar=43');\n    expect(searchParams.get('foo')).toBe('42');\n    expect(searchParams.get('bar')).toBe('43');\n  });\n});\n\ndescribe('stripScheme(url)', () => {\n  const cases = [\n    ['', ''],\n    ['example.com', 'example.com'],\n    ['example.com//', 'example.com//'],\n    ['http://example.com', 'example.com'],\n    ['https://example.com', 'example.com'],\n    ['ftp://example.com', 'example.com'],\n    ['custom-scheme://example.com', 'example.com'],\n  ];\n\n  it.each(cases)('removes scheme from url: %p', (urlInput, urlOutput) => {\n    expect(stripScheme(urlInput)).toBe(urlOutput);\n  });\n});\n\ndescribe('addClerkPrefix(str)', () => {\n  const undefinedCase = [[undefined, '']];\n\n  it.each(undefinedCase)('attempts to add the prefix clerk. to %p', (urlInput, urlOutput) => {\n    expect(addClerkPrefix(urlInput)).toBe(urlOutput);\n  });\n\n  const cases = [\n    ['', ''],\n    ['example.com', 'clerk.example.com'],\n    ['clerk.example.com', 'clerk.example.com'],\n    ['clerk.clerk.example.com', 'clerk.example.com'],\n    ['clerk.abc', 'clerk.clerk.abc'],\n    ['clerk.com', 'clerk.clerk.com'],\n    ['clerk.clerk.com', 'clerk.clerk.com'],\n    ['clerk.clerk.clerk.com', 'clerk.clerk.com'],\n    ['satellite.dev', 'clerk.satellite.dev'],\n    ['clerk.satellite.dev', 'clerk.satellite.dev'],\n    ['quick-marten-1.clerk.accounts.lclclerk.com', 'quick-marten-1.clerk.accounts.lclclerk.com'],\n    ['noble-fox-4.clerk.accounts.dev', 'noble-fox-4.clerk.accounts.dev'],\n  ];\n  it.each(cases)('attempts to add the prefix clerk. to %p', (urlInput, urlOutput) => {\n    expect(addClerkPrefix(urlInput)).toBe(urlOutput);\n  });\n});\n"],"mappings":"AAAA,SAAS,gBAAgB,mBAAmB,mBAAmB;AAE/D,SAAS,kCAAkC,MAAM;AAC/C,KAAG,4DAA4D,MAAM;AACnE,QAAI,eAAe,kBAAkB,EAAE;AACvC,WAAO,aAAa,IAAI,KAAK,CAAC,EAAE,SAAS;AAEzC,mBAAe,kBAAkB,eAAe;AAChD,WAAO,aAAa,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI;AACzC,WAAO,aAAa,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI;AAEzC,mBAAe,kBAAkB,gBAAgB;AACjD,WAAO,aAAa,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI;AACzC,WAAO,aAAa,IAAI,KAAK,CAAC,EAAE,KAAK,IAAI;AAAA,EAC3C,CAAC;AACH,CAAC;AAED,SAAS,oBAAoB,MAAM;AACjC,QAAM,QAAQ;AAAA,IACZ,CAAC,IAAI,EAAE;AAAA,IACP,CAAC,eAAe,aAAa;AAAA,IAC7B,CAAC,iBAAiB,eAAe;AAAA,IACjC,CAAC,sBAAsB,aAAa;AAAA,IACpC,CAAC,uBAAuB,aAAa;AAAA,IACrC,CAAC,qBAAqB,aAAa;AAAA,IACnC,CAAC,+BAA+B,aAAa;AAAA,EAC/C;AAEA,KAAG,KAAK,KAAK,EAAE,+BAA+B,CAAC,UAAU,cAAc;AACrE,WAAO,YAAY,QAAQ,CAAC,EAAE,KAAK,SAAS;AAAA,EAC9C,CAAC;AACH,CAAC;AAED,SAAS,uBAAuB,MAAM;AACpC,QAAM,gBAAgB,CAAC,CAAC,QAAW,EAAE,CAAC;AAEtC,KAAG,KAAK,aAAa,EAAE,2CAA2C,CAAC,UAAU,cAAc;AACzF,WAAO,eAAe,QAAQ,CAAC,EAAE,KAAK,SAAS;AAAA,EACjD,CAAC;AAED,QAAM,QAAQ;AAAA,IACZ,CAAC,IAAI,EAAE;AAAA,IACP,CAAC,eAAe,mBAAmB;AAAA,IACnC,CAAC,qBAAqB,mBAAmB;AAAA,IACzC,CAAC,2BAA2B,mBAAmB;AAAA,IAC/C,CAAC,aAAa,iBAAiB;AAAA,IAC/B,CAAC,aAAa,iBAAiB;AAAA,IAC/B,CAAC,mBAAmB,iBAAiB;AAAA,IACrC,CAAC,yBAAyB,iBAAiB;AAAA,IAC3C,CAAC,iBAAiB,qBAAqB;AAAA,IACvC,CAAC,uBAAuB,qBAAqB;AAAA,IAC7C,CAAC,8CAA8C,4CAA4C;AAAA,IAC3F,CAAC,kCAAkC,gCAAgC;AAAA,EACrE;AACA,KAAG,KAAK,KAAK,EAAE,2CAA2C,CAAC,UAAU,cAAc;AACjF,WAAO,eAAe,QAAQ,CAAC,EAAE,KAAK,SAAS;AAAA,EACjD,CAAC;AACH,CAAC;","names":[]}